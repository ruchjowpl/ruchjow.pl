<?php

namespace RuchJow\UserBundle\DependencyInjection;

use Symfony\Component\Config\Definition\Builder\TreeBuilder;
use Symfony\Component\Config\Definition\ConfigurationInterface;

/**
 * This is the class that validates and merges configuration from your app/config files
 *
 * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html#cookbook-bundles-extension-config-class}
 */
class Configuration implements ConfigurationInterface
{
    /**
     * {@inheritDoc}
     */
    public function getConfigTreeBuilder()
    {
        $treeBuilder = new TreeBuilder();
        $rootNode = $treeBuilder->root('ruch_jow_user');
        $rootNode
            ->children()
                ->arrayNode('referral_links')
                    ->children()
                        ->scalarNode('token_length')
                            ->isRequired()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('remove_account')
                    ->children()
                        ->scalarNode('token_length')
                            ->isRequired()
                        ->end()
                        ->scalarNode('token_expiration_time')
                            ->isRequired()
                        ->end()
                        ->arrayNode('email')
                            ->children()
                                ->scalarNode('from')
                                    ->defaultNull()
                                ->end()
                                ->scalarNode('from_name')
                                    ->defaultNull()
                                ->end()
                                ->scalarNode('subject')
                                    ->isRequired()
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('password_reset')
                    ->children()
                        ->scalarNode('token_length')
                            ->isRequired()
                        ->end()
                        ->scalarNode('token_expiration_time')
                            ->isRequired()
                        ->end()
                        ->arrayNode('email')
                            ->children()
                                ->scalarNode('from')
                                    ->defaultNull()
                                ->end()
                                ->scalarNode('from_name')
                                    ->defaultNull()
                                ->end()
                                ->scalarNode('subject')
                                    ->isRequired()
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('invitation')
                    ->children()
                        ->arrayNode('email')
                            ->children()
                                ->scalarNode('from')
                                    ->defaultNull()
                                ->end()
                                ->scalarNode('from_name')
                                    ->defaultNull()
                                ->end()
                                ->scalarNode('subject')
                                    ->isRequired()
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('thanks')
                    ->children()
                        ->arrayNode('email')
                            ->children()
                                ->scalarNode('from')
                                    ->defaultNull()
                                ->end()
                                ->scalarNode('from_name')
                                    ->defaultNull()
                                ->end()
                                ->scalarNode('subject')
                                    ->isRequired()
                                ->end()
                                ->scalarNode('time')
                                    ->isRequired()
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('reminder')
                    ->children()
                        ->arrayNode('email')
                            ->children()
                                ->scalarNode('from')
                                    ->defaultNull()
                                ->end()
                                ->scalarNode('from_name')
                                    ->defaultNull()
                                ->end()
                                ->scalarNode('subject')
                                    ->isRequired()
                                ->end()
                                ->arrayNode('remainders')
                                    ->prototype('scalar')
                                        ->isRequired()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('confirmation_email')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->scalarNode('from')
                            ->defaultNull()
                        ->end()
                        ->scalarNode('from_name')
                            ->defaultNull()
                        ->end()
                        ->scalarNode('subject')
                            ->isRequired()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('user_validation')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->arrayNode('nick')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->scalarNode('pattern')
                                    ->defaultValue('/^(?=.*[^ _\\-]$)([a-ząćęłńóśźżA-ZĄĆĘŁŃÓŚŹŻ0-9][ _.\\-]?){4,}$/')
//                                    ->defaultValue('/^[a-ząćęłńóśźżA-ZĄĆĘŁŃÓŚŹŻ0-9]{4,}$/')
                                ->end()
                                ->scalarNode('pattern_error')
                                    ->defaultValue('Nick format is incorrect.')
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('email')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->scalarNode('pattern')
                                    ->defaultValue('/^[a-zA-Z0-9.!#$%&\'*+\\/?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/')
                                ->end()
                                ->scalarNode('pattern_error')
                                    ->defaultValue('Email format is incorrect.')
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('phone')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->scalarNode('pattern')
                                    ->defaultValue('/^[ ()-]*(?:(\\+|00)[ ()-]*1?[ ()-]*[1-9](?:[ ()-]*\\d)){0,2}(?:[ ()-]*\\d){9}[ ()-]*$/')
                                ->end()
                                ->scalarNode('pattern_error')
                                    ->defaultValue('Phone format is incorrect.')
                                ->end()

                                ->scalarNode('required')
                                    ->defaultFalse()
                                ->end()
                                ->scalarNode('required_error')
                                    ->defaultValue('Phone is required.')
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('organisation_url')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->scalarNode('pattern')
                                    ->defaultValue('/^(https?:\/\/)?([0-9a-ąćęłńóśźż\\.-]+)\\.([a-z\\.]{2,6})(\\/[a-zA-Z0-9\\.-_]*)*\\/?$/')
                                ->end()
                                ->scalarNode('pattern_error')
                                    ->defaultValue('Organisation url format is incorrect.')
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('organisation_name')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->scalarNode('pattern')
                                    ->defaultValue('/^(?=[^ ])( ?[0-9a-ząćęłńóśźżA-ZĄĆĘŁŃÓŚŹŻ.,\\-_"\'!@#$%^&*()+=\\\\\\/\\][<>:;]){3,}$/')
                                ->end()
                                ->scalarNode('pattern_error')
                                    ->defaultValue('Organisation name format is incorrect.')
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('password')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->scalarNode('pattern')
                                    ->defaultValue('/^(?=.*[A-Z])(?=.*[0-9]).{5,20}$/')
                                ->end()
                                ->scalarNode('pattern_error')
                                    ->defaultValue('Password format is incorrect.')
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
            ->end()
        ;


        return $treeBuilder;
    }
}
